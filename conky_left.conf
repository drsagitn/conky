--[[
#=====================================================================================
#                               aureola
# Date    : 27/01/2018
# Author  : Erik Dubois at http://www.erikdubois.be
# Version : v2.0.3
# License : Distributed under the terms of GNU GPL version 2 or later
# Documentation : http://erikdubois.be/category/linux/aureola/
#======================================================================================

# %%    a literal %
# %a    locale's abbreviated weekday name (e.g., Sun)
# %A    locale's full weekday name (e.g., Sunday)
# %b    locale's abbreviated month name (e.g., Jan)
# %B    locale's full month name (e.g., January)
# %c    locale's date and time (e.g., Thu Mar 3 23:05:25 2005)
# %C    century; like %Y, except omit last two digits (e.g., 21)
# %d    day of month (e.g, 01)
# %D    date; same as %m/%d/%y
# %e    day of month, space padded; same as %_d but no leading 0
# %F    full date; same as %Y-%m-%d
# %g    last two digits of year of ISO week number (see %G)
# %G    year of ISO week number (see %V); normally useful only with %V
# %h    same as %b
# %H    hour (00..23)
# %I    hour (01..12)
# %j    day of year (001..366)
# %k    hour ( 0..23)
# %l    hour ( 1..12)
# %m    month (01..12)
# %M    minute (00..59)
# %n    a newline
# %N    nanoseconds (000000000..999999999)
# %p    locale's equivalent of either AM or PM; blank if not known
# %P    like %p, but lower case
# %r    locale's 12-hour clock time (e.g., 11:11:04 PM)
# %R    24-hour hour and minute; same as %H:%M
# %s    seconds since 1970-01-01 00:00:00 UTC
# %S    second (00..60)
# %t    a tab
# %T    time; same as %H:%M:%S
# %u    day of week (1..7); 1 is Monday
# %U    week number of year, with Sunday as first day of week (00..53)
# %V    ISO week number, with Monday as first day of week (01..53)
# %w    day of week (0..6); 0 is Sunday
# %W    week number of year, with Monday as first day of week (00..53)
# %x    locale's date representation (e.g., 12/31/99)
# %X    locale's time representation (e.g., 23:13:48)
# %y    last two digits of year (00..99)
# %Y    year
# %z    +hhmm numeric timezone (e.g., -0400)
# %:z    +hh:mm numeric timezone (e.g., -04:00)
# %::z    +hh:mm:ss numeric time zone (e.g., -04:00:00)

# %:::z    numeric time zone with : to necessary precision (e.g., -04, +05:30)
# %Z    alphabetic time zone abbreviation (e.g., EDT)
#======================================================================================
#                               
# Source : https://plus.google.com/110188656318786850894/posts
# Source : Jesse Avalos
#======================================================================================


]]

conky.config = {

	--Various settings

	background = true, 							-- forked to background
	cpu_avg_samples = 2,
	diskio_avg_samples = 10,
	double_buffer = true,
	if_up_strictness = 'address',
	net_avg_samples = 2,
	no_buffers = true,
	temperature_unit = 'celsius',
	text_buffer_size = 2048,
	update_interval = 1,
	imlib_cache_size = 0,                       --spotify cover
	xinerama_head = 1,

	--Placement

	alignment = 'top_left',
	gap_x = 20,
	gap_y = 20,
	minimum_height = 50,
	minimum_width = 100,
	maximum_width = 800,

	--Graphical

	border_inner_margin = 10, 					-- margin between border and text
	border_outer_margin = 1, 					-- margin between border and edge of window
	border_width = 0, 							-- border width in pixels
	default_bar_width = 280,
	default_bar_height = 10,
	default_gauge_height = 25,
	default_gauge_width =40,
	default_graph_height = 40,
	default_graph_width = 115,
	default_shade_color = '#000000',
	default_outline_color = '#000000',
	draw_borders = false,						--draw borders around text
	draw_graph_borders = false,
	draw_shades = false,
	draw_outline = false,
	stippled_borders = 0,

	--Textual
	
	use_xft = true,
	font = 'RobotoCondensed:size=12',

	--Windows

	own_window = true,
	own_window_argb_value = 0,
	own_window_argb_visual = true,
	own_window_class = 'Conky',
	own_window_colour = '#000000',
	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
	own_window_transparent = no,
	own_window_title = 'system_conky',
	own_window_type = 'normal',-- # options are: normal/override/dock/desktop/panel
	


	--Colours

	default_color = '#000000',  				-- default color and border color
	color1 = '#FFFFFF', 
	color2 = '#FFFFFF', 
	color3 = '#aa0000', 
	color4 = '#BDBDBD',
	color5 = '#CCCCCC', 
	color6 = '#FFFFFF',

	--Signal Colours
	color7 = '#1F7411',  --green
	color8 = '#FFA726',  --orange
	color9 = '#F1544B',  --firebrick


		--Lua


};


conky.text = [[
${goto 20}${color2}${font LineAwesomeMod :size=15}V $color1$font${execi 60 cat ~/.cache/weather.txt | grep city | cut -d">" -f2} - ${execi 60 cat ~/.cache/weather.txt | grep country | cut -d">" -f2} $color1${font Roboto Condensed:size=5}at ${execi 60 cat ~/.cache/weather.txt | grep update | cut -d">" -f2}
${voffset 0}${goto 20}${color2}${font LineAwesomeMod :size=25}O $color1${font Roboto Condensed:size=25}${execi 60 cat ~/.cache/weather.txt | grep temp | cut -d">" -f2}ยบ$color1 $font   ${execi 60 cat ~/.cache/weather.txt | grep description | cut -d">" -f2}
${goto 20}${color2}${font LineAwesomeMod :size=8}) $color1${font Roboto Condensed:size=8} Min: ${execi 60 cat ~/.cache/weather.txt | grep min | cut -d">" -f2}ยบ
${voffset -28}${alignr 100}${color2}${font LineAwesomeMod :size=8}( $color1${font Roboto Condensed:size=8} Max: ${execi 60 cat ~/.cache/weather.txt | grep max | cut -d">" -f2}ยบ
${voffset -28}${alignr -150}${color2}${font LineAwesomeMod :size=8}Q $color1${font Roboto Condensed:size=8} Humidity: ${execi 60 cat ~/.cache/weather.txt | grep humidity | cut -d">" -f2}
${alignr}${color2}${goto 20}${color2}${font LineAwesomeMod :size=8}u $color1${font Roboto Condensed:size=8} Feels like: ${execi 60 cat ~/.cache/weather.txt | grep feels_like| cut -d">" -f2}ยบ
${voffset -28}${alignr -170}${color2}${font LineAwesomeMod :size=8}o $color1${font Roboto Condensed:size=8} Winds: ${execi 60 cat ~/.cache/weather.txt | grep wind | cut -d">" -f2} m/s
${font Roboto Condensed:light:size=25}${color1}${time %R}
]]
